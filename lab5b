var serial; // variable to hold an instance of the serialport library
var portName = '/dev/cu.usbserial-DN03GOBT'; // fill in your serial port name here

// variable to hold values from Arduino
var data; //a variable to store incoming data
var sensor1, sensor2; //variables for each of my incoming sensor values

function setup() {

serial = new p5.SerialPort(); // make a new instance of the serialport library
serial.on('list', printList); // set a callback function for the serialport list event
serial.on('connected', serverConnected); // callback for connecting to the server
serial.on('open', portOpen); // callback for the port opening
serial.on('data', serialEvent); // callback for when new data arrives
serial.on('error', serialError); // callback for errors
serial.on('close', portClose); // callback for the port closing

serial.list(); // list the serial ports
serial.open(portName); // open a serial port
createCanvas(400, 400);
}

function draw() {
background(255, sensor2, sensor1);
//fill(data1);
noStroke();
//ellipse(width/2, height/2, sensor1, sensor2);
rect(sensor2, sensor2, sensor2, sensor2);
fill(sensor1, 300, sensor2);
ellipse(sensor1, sensor1, (sensor2-sensor1), (sensor1-sensor2));

}

function printList(portList) {
// portList is an array of serial port names
for (var i = 0; i < portList.length; i++) {
// Display the list the console:
print(i + " " + portList[i]);
}
}

function serverConnected() {
print('connected to server.');
}

function portOpen() {
print('the serial port opened.')
}

function serialEvent() {
data = serial.readLine(); //read until a carriage return

//best practice is to make sure youâ€™re not reading null data
if(data.length > 0){
//split the values apart at the comma
var numbers = split(data, ',');

//set variables as numbers
sensor1 = Number(numbers[0]);
sensor2 = Number(numbers[1]);
}

console.log(sensor1 + ", " + sensor2);
}

function serialError(err) {
print('Something went wrong with the serial port. ' + err);
}

function portClose() {
print('The serial port closed.');
}
