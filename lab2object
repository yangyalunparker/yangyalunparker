// released under the GPLv3 license to match the rest of the AdaFruit NeoPixel library

#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
#include <avr/power.h>
#endif

// Which pin on the Arduino is connected to the NeoPixels?
// On a Trinket or Gemma we suggest changing this to 1
#define PIN               7       // pin connect to LED strap 
#define Button1           5      //The pin connect to first button
#define Button2           6      //The pin connect to the second button
int buttonState1 = 0;           //Status for button 1
int buttonState2 =0;           //status for button 2

// How many NeoPixels are attached to the Arduino?
#define NUMPIXELS      4

// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.
// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest
// example for more information on possible values.
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);

void setup() {
 
  Serial.begin(9600);
  pinMode (Button1,INPUT);
  pinMode (Button2,INPUT); 
  pinMode (PIN,OUTPUT);
  pixels.begin(); // This initializes the NeoPixel library.
  pixels.show();  //let all led off
}

void loop(){
   buttonState1 =digitalRead(Button1);
   buttonState2 =digitalRead(Button2);
   //if button1 ON & button2 OFF turn on red color
   if (buttonState1 == HIGH && buttonState2 == LOW) 
   { 
      for(int i=0;i<NUMPIXELS;i++){

      // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255
      pixels.setPixelColor(i, pixels.Color(150,0,0)); // Moderately bright red color.
      pixels.show(); // This sends the updated pixel color to the hardware.
      }
    }
    //if button1 OFF & button2 ON turn on green color
    else if (buttonState2 == HIGH && buttonState1 == LOW)
    {
      for(int i=0;i<NUMPIXELS;i++){

      // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255
      pixels.setPixelColor(i, pixels.Color(0,150,0)); // Moderately bright green color.
      pixels.show(); // This sends the updated pixel color to the hardware.      
      }
    }
    //else turn on blue
    else {
      for(int i=0;i<NUMPIXELS;i++){

      // pixels.Color takes RGB values, from 0,0,0 up to 255,255,255
      pixels.setPixelColor(i, pixels.Color(0,0,150)); // Moderately bright blue color.
      pixels.show(); // This sends the updated pixel color to the hardware.
     }
    }
    delay(500);
    //Serial.println (buttonState1);
    Serial.println (buttonState2);
}
